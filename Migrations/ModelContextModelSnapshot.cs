// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using RecipeBlogProject.Models;

#nullable disable

namespace RecipeProject.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeBlogProject.Models.Admin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            id = 1,
                            IsDeleted = false,
                            PersonId = 1
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CategoryImagePath")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Categoryname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Breakfast",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3587),
                            IsDeleted = false
                        },
                        new
                        {
                            id = 2,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Lunch",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3589),
                            IsDeleted = false
                        },
                        new
                        {
                            id = 3,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Dinner",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3590),
                            IsDeleted = false
                        },
                        new
                        {
                            id = 4,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Sweets",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3590),
                            IsDeleted = false
                        },
                        new
                        {
                            id = 5,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Juices",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3591),
                            IsDeleted = false
                        },
                        new
                        {
                            id = 6,
                            CategoryImagePath = "Dingo/img/food_item/food_item_1.png",
                            Categoryname = "Vegeterian",
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3593),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Chef", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonId");

                    b.ToTable("Chefs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            IsDeleted = false,
                            PersonId = 2
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3526),
                            Email = "Admin@Admin.com",
                            Firstname = "Admin",
                            Gender = "Male",
                            IsDeleted = false,
                            Lastname = "Admin",
                            Password = "Test@12345",
                            Phone = "0771",
                            RoleId = 1
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3528),
                            Email = "Chef@Chef.com",
                            Firstname = "Chef",
                            Gender = "Male",
                            IsDeleted = false,
                            Lastname = "Chef",
                            Password = "Test@12345",
                            Phone = "0771",
                            RoleId = 2
                        },
                        new
                        {
                            id = 3,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3529),
                            Email = "User@User.com",
                            Firstname = "User",
                            Gender = "Male",
                            IsDeleted = false,
                            Lastname = "User",
                            Password = "Test@12345",
                            Phone = "0771",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipe", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("ChefId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Details")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("Isapproved")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Receipename")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.HasIndex("ChefId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ChefId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3604),
                            ImagePath = "Dingo/img/food_item/food_item_2.png",
                            Ingredients = "meat, salt",
                            IsDeleted = false,
                            Isapproved = true,
                            Price = 23.5,
                            Receipename = "Meat with Salt Recepie"
                        },
                        new
                        {
                            id = 2,
                            ChefId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3606),
                            ImagePath = "Dingo/img/food_item/food_item_2.png",
                            Ingredients = "chicken, salt",
                            IsDeleted = false,
                            Isapproved = true,
                            Price = 13.5,
                            Receipename = "Chicken with Salt Recepie"
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipecategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RecipeId");

                    b.ToTable("Recipecategories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3623),
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            id = 2,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3625),
                            IsDeleted = false,
                            RecipeId = 1
                        },
                        new
                        {
                            id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3625),
                            IsDeleted = false,
                            RecipeId = 2
                        },
                        new
                        {
                            id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3626),
                            IsDeleted = false,
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipepayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Paymentfilepath")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("Totalamount")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipepayments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3636),
                            IsDeleted = false,
                            Paymentfilepath = "file path",
                            RecipeId = 1,
                            Totalamount = 23.5,
                            UserId = 1
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3637),
                            IsDeleted = false,
                            Paymentfilepath = "file path2",
                            RecipeId = 2,
                            Totalamount = 13.5,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Systemuser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PersonId");

                    b.ToTable("Systemusers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            IsDeleted = false,
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Testimonial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsShown")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Rating")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Usercomment")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3660),
                            IsDeleted = false,
                            IsShown = true,
                            Rating = 5,
                            UserId = 1,
                            Usercomment = "Amazing service , delecious recipes"
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Userrole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Userroles");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3480),
                            IsDeleted = false,
                            RoleName = "Admin"
                        },
                        new
                        {
                            id = 2,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3491),
                            IsDeleted = false,
                            RoleName = "Chef"
                        },
                        new
                        {
                            id = 3,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3492),
                            IsDeleted = false,
                            RoleName = "User"
                        },
                        new
                        {
                            id = 4,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3492),
                            IsDeleted = false,
                            RoleName = "Guest User"
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Visacard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long>("Cardnumber")
                        .HasColumnType("NUMBER(19)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Expirydate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Pin")
                        .HasColumnType("NUMBER(3)");

                    b.Property<int?>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("Visacards");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Cardnumber = 1234131L,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3650),
                            Cvv = "123",
                            Expirydate = "01/27",
                            Firstname = "User",
                            IsDeleted = false,
                            Lastname = "User",
                            Pin = (byte)101,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Websitedetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Texttype")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Websitetext")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("id");

                    b.HasIndex("AdminId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Websitedetails");

                    b.HasData(
                        new
                        {
                            id = 1,
                            AdminId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3669),
                            IsDeleted = false,
                            Texttype = 1,
                            Websitetext = "Welcome to Recipe Blog\r\nDelivering great food for more than 18 years!"
                        },
                        new
                        {
                            id = 2,
                            AdminId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3670),
                            IsDeleted = false,
                            Texttype = 3,
                            Websitetext = "Contact Us"
                        },
                        new
                        {
                            id = 3,
                            AdminId = 1,
                            CreatedDate = new DateTime(2024, 5, 27, 17, 15, 42, 745, DateTimeKind.Local).AddTicks(3671),
                            IsDeleted = false,
                            Texttype = 2,
                            Websitetext = "A108 Adam Street, New York, NY 535022"
                        });
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Admin", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Chef", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Person", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Userrole", "Role")
                        .WithMany("Systemusers")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipe", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Chef", "Chef")
                        .WithMany("Recipes")
                        .HasForeignKey("ChefId");

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipecategory", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Category", "Category")
                        .WithMany("Recipecategories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("RecipeBlogProject.Models.Recipe", "Recipe")
                        .WithMany("Recipecategories")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipepayment", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Recipe", "Recipe")
                        .WithMany("Recipepayments")
                        .HasForeignKey("RecipeId");

                    b.HasOne("RecipeBlogProject.Models.Systemuser", "User")
                        .WithMany("Recipepayments")
                        .HasForeignKey("UserId");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Systemuser", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Testimonial", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Systemuser", "User")
                        .WithMany("Testimonials")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Visacard", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Systemuser", "User")
                        .WithMany("Visacards")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Websitedetail", b =>
                {
                    b.HasOne("RecipeBlogProject.Models.Admin", "Admin")
                        .WithMany("Websitedetails")
                        .HasForeignKey("AdminId");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Admin", b =>
                {
                    b.Navigation("Websitedetails");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Category", b =>
                {
                    b.Navigation("Recipecategories");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Chef", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Recipe", b =>
                {
                    b.Navigation("Recipecategories");

                    b.Navigation("Recipepayments");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Systemuser", b =>
                {
                    b.Navigation("Recipepayments");

                    b.Navigation("Testimonials");

                    b.Navigation("Visacards");
                });

            modelBuilder.Entity("RecipeBlogProject.Models.Userrole", b =>
                {
                    b.Navigation("Systemusers");
                });
#pragma warning restore 612, 618
        }
    }
}
